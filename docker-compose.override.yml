version: '3.4'

services:
  urlshortner.mongo:
    container_name: "urlshortner.mongo"
    restart: always
    #ports:
    #  - "27017:27017"
    volumes:
      - mongo_data:/data/db

  urlshortner.sqlserver:
    container_name: "urlshortner.sqlserver"
    restart: always
    #ports:
    #  - 1433:1433
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Admin@123" 

  urlshortner.redis:
    container_name: "urlshortner.cache"
    image: redis
    restart: always
    ports:
      - 6379:6379

  urlshortner.rabbitmq:
    container_name: "urlshortner.rabbitmq"
    restart: always
    ports:
    - 5672:5672
    - 15672:15672

  elasticsearch:
    container_name: elasticsearch
    environment:
        - discovery.type=single-node
    #ports:
    #    - "9200:9200"
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data   

  kibana:
    container_name: kibana
    environment:        
        - ELASTICSEARCH_HOSTS:'["http://elasticsearch:9200"]'
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601" 

  apm-server:
    container_name: apm-server
    depends_on:
      - elasticsearch
      - kibana
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    #ports:
    #- 8200:8200
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]

  redirectlog.api:
    container_name: "redirectlog.api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    #ports:
    #  - 5001:80
    #  - 8001:443
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - urlshortner.sqlserver
      - urlshortner.rabbitmq

  shortner.api:
    container_name: "shortner.api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    #ports:
    #  - 5002:80
    #  - 8002:443
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - urlshortner.mongo
      - urlshortner.rabbitmq

  web.gateway:
    container_name: "web.gateway"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - 5000:80
      - 8000:443
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  urlshortner.web:
    container_name: "urlshortner.web"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=8003
      - ASPNETCORE_HOSTINGSTARTUPASSEMBLIES=Microsoft.AspNetCore.SpaProxy
    ports:
      - 5003:80
      - 8003:443
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - web.gateway
