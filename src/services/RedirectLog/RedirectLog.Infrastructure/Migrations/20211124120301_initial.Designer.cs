// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedirectLog.Infrastructure.Persistence;

#nullable disable

namespace RedirectLog.Infrastructure.Migrations
{
    [DbContext(typeof(RedirectLogContext))]
    [Migration("20211124120301_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RedirectLog.Domain.Entities.CustomUrl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginalURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueKey")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.ToTable("CustomUrls");
                });

            modelBuilder.Entity("RedirectLog.Domain.Entities.Redirection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomUrlId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomUrlId");

                    b.ToTable("Redirections");
                });

            modelBuilder.Entity("RedirectLog.Domain.Entities.Redirection", b =>
                {
                    b.HasOne("RedirectLog.Domain.Entities.CustomUrl", "CustomUrl")
                        .WithMany("Redirections")
                        .HasForeignKey("CustomUrlId");

                    b.Navigation("CustomUrl");
                });

            modelBuilder.Entity("RedirectLog.Domain.Entities.CustomUrl", b =>
                {
                    b.Navigation("Redirections");
                });
#pragma warning restore 612, 618
        }
    }
}
